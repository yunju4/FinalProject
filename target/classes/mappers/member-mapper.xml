<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> <!-- xml 파일의 유효성 체크를 위한 부분 -->
<mapper namespace="member">

	<!-- 회원가입 : MEMBER 테이블에 INSERT 하는 구조 -->
	<insert id="join" parameterType="member">
		INSERT INTO MEMBER(
						   MEMBER_NUM,
						   MEMBER_ID, 
						   MEMBER_PWD,
						   MEMBER_NAME,
						   PHONE,
						   EMAIL,
						   POST_NO,
						   ADDRESS,
						   DETAIL_ADDRESS,
						   GENDER,
						   STATUS,
						   BIRTH
						   )
		VALUES(
			   SEQ_MEM.NEXTVAL,
			   #{memberId}, 
			   #{memberPwd},
			   #{memberName},
			   #{phone},
			   #{email},
			   #{postNo},
			   #{address},
			   #{detailAddress},
			   #{gender},
			   'Y',
			   #{birth}
			   )
	</insert>
	
	<!-- 아이디 중복 체크 : 아이디를 이용한 단일 조회 (중복X) -->
	<select id="idCheck" resultType="member" parameterType="string">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 회원 목록 조회 -->
	<select id="selectList" resultType="member">
		SELECT *
		FROM MEMBER
		ORDER BY MEMBER_NUM DESC
	</select>
		<!-- 
		ORDER BY MEMBER_ID ASC
		-->
	
	<!-- 로그인을 위한 SQL 구문 -->
	<select id="loginMember" resultType="member" parameterType="member">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
		  AND MEMBER_PWD = #{memberPwd}
	</select>
	
	<!-- 아이디 찾기을 위한 SQL 구문 -->
	<select id="findId" resultType="member" parameterType="string">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_NAME = #{memberName}
		  AND EMAIL = #{email}
	</select>
	
	<!-- 비밀번호 찾기을 위한 SQL 구문 -->
	<select id="findPwd" resultType="member" parameterType="string">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
		  AND EMAIL = #{email}
	</select>
	<select id="emailCheck" resultType="int" parameterType="String" >
		SELECT count(*) ass
		FROM MEMBER
		WHERE EMAIL = #{email}
	</select>
	
	<select id="idsCheck" resultType="int" parameterType="String" >
		SELECT count(*)
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 이영훈 -->
	<update id="memberCrime" parameterType="member">
		UPDATE MEMBER
		 SET STATUS = 'Y'
		WHERE MEMBER_NUM = #{memberNum} 	
	</update>
	
	<update id="memberCrimeRe" parameterType="member">
		UPDATE MEMBER
		 SET STATUS = 'N'
		WHERE MEMBER_NUM = #{memberNum} 	
	</update>
	
</mapper>










